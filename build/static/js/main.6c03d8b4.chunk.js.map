{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","showAll","handleFilter","className","value","onChange","Persons","personsToShow","onDelete","map","person","name","number","onClick","id","PersonForm","newName","newNumber","onNameChange","onNumberChange","addPerson","onSubmit","type","Notification","message","errorMessage","length","messageType","baseURL","axios","get","then","response","data","newObject","post","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setShowAll","setMessage","setErrorMessage","useEffect","personService","initialPerson","filter","toLowerCase","includes","console","log","event","target","preventDefault","personObject","some","existing_id","find","window","confirm","updatedPerson","setTimeout","catch","error","responsedPerson","concat","personToDelete","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c03d8b4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Filter = ({showAll, handleFilter}) => {\r\n  return (\r\n    <section className='filter__section'>\r\n      filter shown with: <input value={showAll} onChange={handleFilter} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Filter","import React, { useState } from 'react'\r\n\r\nconst Persons = ({personsToShow, onDelete}) => {\r\n  return (\r\n    <div className='persons__list'>\r\n      {personsToShow.map(person => \r\n        <div className='persons__list__item' key={person.id}>\r\n          <span className='persons__list__item__content'>{person.name}  {person.number}</span>\r\n          <button className='persons__list__item__button' \r\n                  onClick={() => onDelete(person.id)}>\r\n                    delete\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React, { useState } from 'react'\r\n\r\nconst PersonForm = ({newName, newNumber, onNameChange, onNumberChange, addPerson}) => {\r\n    return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={onNameChange}/>\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={onNumberChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst messageType = (message, errorMessage) => {\r\n  const result = (message && message.length > 0) ?\r\n    <section className='notification'>\r\n      {message}\r\n    </section>\r\n  : \r\n    <section className='errorNotification'>\r\n      {errorMessage}\r\n    </section>\r\n  return result\r\n    \r\n}\r\n\r\nconst Notification = ({message, errorMessage}) => {\r\n  return (\r\n    messageType(message, errorMessage)\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseURL, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n  // console.log(`${baseURL}/${id}`)\r\n  return axios.delete(`${baseURL}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseURL}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { // more compact syntax: if key and variable names are the same\r\n  getAll,\r\n  create,\r\n  del,\r\n  update\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ]     = useState([]) \r\n  const [ newName, setNewName ]     = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ showAll, setShowAll ]     = useState('') // for filtering displayed elements\r\n  const [ message, setMessage ]     = useState('')\r\n  const [ errorMessage, setErrorMessage ]     = useState('')\r\n\r\n  // effect-hooks\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPerson => {\r\n        setPersons(initialPerson)\r\n      })\r\n  }, [])\r\n\r\n  // event handler to the form element thatt will be called when the form is submitted\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    // check if the same name exists\r\n    const isNameExists = persons.some(person => person.name === newName)\r\n    if(isNameExists){\r\n      const existing_id = persons.find(person => person.name === newName).id\r\n      if(!window.confirm(`${newName} is already added to phonebook. Replace old number with the new one? `)) return\r\n      // if confirm is ok, replace existing person with new one\r\n      personService\r\n        .update(existing_id, personObject)\r\n        .then(updatedPerson => {\r\n          console.log('PUT RESPONSE', updatedPerson)\r\n          setPersons(persons.map(person => existing_id !== person.id ? person : updatedPerson))\r\n          setMessage(`Updated ${personObject.name} successfully.`)\r\n          setTimeout(() => setMessage(null), 5000)\r\n          setNewName('') \r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          setErrorMessage(`Information of ${personObject.name} has already been removed from the server.`)\r\n          setTimeout(() => setErrorMessage(null), 5000)\r\n        })\r\n    } // add new\r\n    else {\r\n      personService\r\n        .create(personObject)\r\n        .then(responsedPerson => {\r\n          console.log('POST RESPONSE', responsedPerson)\r\n          setPersons(persons.concat(responsedPerson))\r\n          setMessage(`Added ${personObject.name} successfully`)\r\n          setTimeout(() => setMessage(null), 5000)\r\n          setNewName('') \r\n          setNewNumber('')\r\n        })\r\n    }\r\n  }\r\n\r\n  // event handler that synchronizes the changes made to the input with the component's state\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n  const handleFilter = (event) => {\r\n    setShowAll(event.target.value)\r\n  }\r\n  const handleDelete = id => {\r\n    console.log('TO BE DELETED', persons.find(person => person.id === id))\r\n    if (!window.confirm('Delete person')) return\r\n    let personToDelete = persons.find(person => person.id === id)\r\n\r\n    personService\r\n      .del(id)\r\n      .then(() => {\r\n        // alert(`Removed ${personToDelete.name}`)\r\n        setMessage(`Removed ${personToDelete.name} successfully`)\r\n        setTimeout(() => setMessage(null), 5000)\r\n        setPersons(persons.filter(p => p.id !== id))\r\n      })\r\n  }\r\n  // console.log(showAll.length)\r\n  // console.log(persons)\r\n  const personsToShow = showAll.length === 0 ? persons \r\n    : persons.filter(person => person.name.toLowerCase().includes(showAll.toLowerCase()))\r\n  console.log(message)\r\n\r\n  return (\r\n    <section className='phonebook__section'>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} errorMessage={errorMessage}/>\r\n      <Filter showAll={showAll} handleFilter={handleFilter}/>\r\n      <h3>add a new</h3>\r\n      <PersonForm newName={newName} newNumber={newNumber} \r\n        onNameChange={handleNameChange} onNumberChange={handleNumberChange} addPerson={addPerson} />\r\n      <h3>Numbers</h3>\r\n      <Persons personsToShow={personsToShow} onDelete={handleDelete} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}